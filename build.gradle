plugins { // (1)
    id 'org.springframework.boot' version '2.4.1' // RELEASE 삭제
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group 'com.jerry.project'
version '1.0.4-SNAPSHOT-'
sourceCompatibility = 1.8

//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//
//    // exclude Tomcat
//    compile.exclude module: 'spring-boot-starter-tomcat'
//
//}

repositories {
    mavenCentral()
    jcenter()
}



dependencies {
    //(3)
    implementation('org.springframework.boot:spring-boot-starter-web')
//    implementation group: 'org.apache.tomcat', name: 'tomcat-util', version: '8.5.5'

    // lombok
    implementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')



//    implementation('org.springframework.boot:spring-boot-starter-oauth2-client') // 권한 관련
//    implementation('org.springframework.session:spring-session-jdbc') // 권한 관련

    testImplementation('org.springframework.boot:spring-boot-starter-test')
//    testImplementation("org.springframework.security:spring-security-test") // 권한 관련



    // MyBatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
    // MySQL
    runtimeOnly 'mysql:mysql-connector-java'

    // 세션 보관 위치로 DB를 사용할 경우
    // 10. Spring Session 모듈을 사용하여 세션 정보를 데이터베이스에 저장
//    compile "org.springframework.session:spring-session-jdbc"
    // 세션 보관 위치로 redis를 사용할 경우
    //compile "org.springframework.boot:spring-boot-starter-data-redis"
}


// for Junit 5
test { // (2)
    useJUnitPlatform()
}

// logback(slf4j)를 사용시 모든 의존성에서 commons-logging는 제외.
// commons-logging-xxx.jar 파일을 Maven에서 내려받지 않기 때문에 runtime시 오류가 난다.
//[configurations.runtime, configurations.default]*.exclude( module: 'commons-logging' )
//
//
//// 소스 인코딩 지정
///** 1st approach: Setting encoding during compilation in Java and Test classes  */
//[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
//
//

// -------------------------
//plugins {
//    id 'org.springframework.boot' version '2.4.1'
//    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
//    id 'java'
//}
//
//group = 'com.jerry.project'
//version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '1.8'
//targetCompatibility = 1.8
//
//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//
//    // exclude Tomcat
//    compile.exclude module: 'spring-boot-starter-tomcat'
//
//}
//
//repositories {
//    mavenCentral()
//}
//
//dependencies {
////    implementation 'org.projectlombok:lombok:1.18.16'
////    implementation 'org.projectlombok:lombok:1.18.16'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//
//    implementation 'org.springframework.boot:spring-boot-starter-undertow'
//    // 2021-06-10 Tom 추가 : Validation 사용을 위한 의존 추가
////    implementation 'org.springframework.boot:spring-boot-starter-validation'
//
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//
//    implementation group: 'org.apache.tomcat', name: 'tomcat-util', version: '8.5.5'
//
////    // 6.4.금 - jerry 추가 (유효성검사)
////    implementation("org.springframework.boot:spring-boot-starter-validation")
//
//
//
//
//
//    // 4.28.수 - jerry 추가 (주문취소 기능 구현 하면서..)
////    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
////
////    testCompileOnly 'org.projectlombok:lombok'
////    testAnnotationProcessor 'org.projectlombok:lombok'
//
//    // 2. 5. 금. 추가
//    // mapstruct
//    // Lombok 의존성보다 먼저 선언되어야한다.
//    // 원인은 모르나 의존성 순서가 변경되면 JUnit 테스트시
//    // Mapper 인터페이스 구현체인 MapperImpl 클래스를 인식하지 못하는 오류 존재
////    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
////    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
//
//    // MyBatis
//    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
//    // MySQL
//    runtimeOnly 'mysql:mysql-connector-java'
//
//    // Lombok
//    compileOnly 'org.projectlombok:lombok'
//    annotationProcessor 'org.projectlombok:lombok'
//
//    // 5.10.월 - Jerry 추가 (상품 이미지 등록 구현하면서..)
//    // https://mvnrepository.com/artifact/commons-io/commons-io
////    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
//
//    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
////    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
//
////    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.9'
////    testCompile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
//
//    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
////    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.2'
//
//    // https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-testing
//    // JUnit5 = JUnit Platform + JUnit Jupiter + JUnit Vintage
//    //testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation('org.springframework.boot:spring-boot-starter-test')
//            {   // JUnit4 호환성 제거
////                exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//            }
//
//    // 5.27. 목 - jerry 추가 (테스트코드 작성시작. @MybatisTest 사용)
//    testCompile("org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.1.3")
//
//    // 5.27. 목 - jerry 추가 (테스트코드 작성시작 )
//    // https://mvnrepository.com/artifact/org.mockito/mockito-all
//    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
//
//    // 6. 3. 목 - jerry 추가 (테스트코드 작성중 @ParameterizedTest 사용)
//    testCompile("org.junit.jupiter:junit-jupiter-params:5.4.2")
//
//    // https://mvnrepository.com/artifact/com.google.guava/guava
//    compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'
//
//
//
//}
//
//test {
//    useJUnitPlatform()
//}
//
//
//
//// logback(slf4j)를 사용시 모든 의존성에서 commons-logging는 제외.
//// commons-logging-xxx.jar 파일을 Maven에서 내려받지 않기 때문에 runtime시 오류가 난다.
//[configurations.runtime, configurations.default]*.exclude( module: 'commons-logging' )
//
//
//// 소스 인코딩 지정
///** 1st approach: Setting encoding during compilation in Java and Test classes  */
////[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
//compileJava.options.encoding = "UTF-8"
//compileTestJava.options.encoding = "UTF-8"
//
